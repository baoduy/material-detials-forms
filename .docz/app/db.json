{
  "config": {
    "title": "Material-UI Form Generation",
    "description": "Form and Details View generator using Material UI and Formik",
    "menu": [],
    "version": "1.0.0",
    "repository": "https://github.com/baoduy/mui-formik-generator",
    "native": false,
    "codeSandbox": false,
    "themeConfig": {},
    "separator": "-",
    "wrapper": ".docz/wrapper/index.tsx",
    "typescript": true,
    "host": "0.0.0.0",
    "plugins": [
      {}
    ]
  },
  "props": [
    {
      "key": "src/MuiFormProvider.tsx",
      "value": [
        {
          "description": "This provider is wrapper of MuiPickersUtilsProvider and ThemeProvider into a single provider.",
          "displayName": "MuiFormProvider",
          "methods": [],
          "props": {
            "utils": {
              "defaultValue": null,
              "description": "The utils library from @date-io. Default is @date-io/dayjs. Refer here https://github.com/mui-org/material-ui-pickers",
              "name": "utils",
              "required": false,
              "type": {
                "name": "any"
              }
            },
            "theme": {
              "defaultValue": null,
              "description": "The theme of Material UI. ThemeProvider won't be added if theme property is undefined.",
              "name": "theme",
              "required": false,
              "type": {
                "name": "Theme | ((outerTheme: Theme) => Theme) | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/ErrorMessage.tsx",
      "value": [
        {
          "description": "",
          "displayName": "ErrorMessage",
          "methods": [],
          "props": {
            "messageOnly": {
              "defaultValue": null,
              "description": "",
              "name": "messageOnly",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Tooltip.tsx",
      "value": []
    },
    {
      "key": "src/components/TypeDefinitions.ts",
      "value": []
    },
    {
      "key": "src/components/DetailsView/DetailsFooter.tsx",
      "value": [
        {
          "description": "",
          "displayName": "DetailsFooter",
          "methods": [],
          "props": {
            "hr": {
              "defaultValue": null,
              "description": "",
              "name": "hr",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "As": {
              "defaultValue": null,
              "description": "",
              "name": "As",
              "required": false,
              "type": {
                "name": "Element | ComponentClass<Pick<DetailsFooterProps, \"children\" | \"hr\">, any> | FunctionComponent<Pick<DetailsFooterProps, \"children\" | \"hr\">> | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/DetailsView/DetailsHeader.tsx",
      "value": [
        {
          "description": "",
          "displayName": "DetailsHeader",
          "methods": [],
          "props": {
            "hr": {
              "defaultValue": null,
              "description": "",
              "name": "hr",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "title": {
              "defaultValue": null,
              "description": "",
              "name": "title",
              "required": true,
              "type": {
                "name": "string | TitleProps"
              }
            },
            "As": {
              "defaultValue": null,
              "description": "",
              "name": "As",
              "required": false,
              "type": {
                "name": "Element | ComponentClass<Pick<DetailsHeaderProps, \"hr\" | \"title\">, any> | FunctionComponent<Pick<DetailsHeaderProps, \"hr\" | \"title\">> | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/DetailsView/SectionDetailsBody.tsx",
      "value": [
        {
          "description": "",
          "displayName": "SectionDetailsBody",
          "methods": [],
          "props": {
            "sectionPerRow": {
              "defaultValue": null,
              "description": "",
              "name": "sectionPerRow",
              "required": false,
              "type": {
                "name": "1 | 2 | 3 | 4 | undefined"
              }
            },
            "fields": {
              "defaultValue": null,
              "description": "",
              "name": "fields",
              "required": true,
              "type": {
                "name": "SectionFieldOption<TData>[]"
              }
            },
            "flat": {
              "defaultValue": null,
              "description": "Flat theme without Card border and shadow",
              "name": "flat",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "data": {
              "defaultValue": null,
              "description": "",
              "name": "data",
              "required": true,
              "type": {
                "name": "TData"
              }
            },
            "As": {
              "defaultValue": null,
              "description": "",
              "name": "As",
              "required": false,
              "type": {
                "name": "Element | ComponentClass<Pick<DetailsBodyProps<TData>, \"flat\" | \"data\" | \"fields\" | \"labelAlign\" | \"alternateRowColor\">, any> | FunctionComponent<Pick<DetailsBodyProps<TData>, \"flat\" | ... 3 more ... | \"alternateRowColor\">> | undefined"
              }
            },
            "labelAlign": {
              "defaultValue": null,
              "description": "Label alignment apply to all Cell",
              "name": "labelAlign",
              "required": false,
              "type": {
                "name": "\"left\" | \"right\" | undefined"
              }
            },
            "alternateRowColor": {
              "defaultValue": null,
              "description": "High-light color or True to use the default color for the odd row. Set false to disable the highlight",
              "name": "alternateRowColor",
              "required": false,
              "type": {
                "name": "string | boolean | CSSProperties | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/DetailsView/SectionDetailsView.tsx",
      "value": [
        {
          "description": "",
          "displayName": "SectionDetailsView",
          "methods": [],
          "props": {
            "fields": {
              "defaultValue": null,
              "description": "",
              "name": "fields",
              "required": true,
              "type": {
                "name": "SectionFieldOption<TData>[]"
              }
            },
            "flat": {
              "defaultValue": null,
              "description": "Flat theme without Card border and shadow",
              "name": "flat",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "data": {
              "defaultValue": null,
              "description": "",
              "name": "data",
              "required": true,
              "type": {
                "name": "TData"
              }
            },
            "footer": {
              "defaultValue": null,
              "description": "",
              "name": "footer",
              "required": false,
              "type": {
                "name": "DetailsFooterProps | undefined"
              }
            },
            "header": {
              "defaultValue": null,
              "description": "",
              "name": "header",
              "required": false,
              "type": {
                "name": "string | DetailsHeaderProps | undefined"
              }
            },
            "As": {
              "defaultValue": null,
              "description": "",
              "name": "As",
              "required": false,
              "type": {
                "name": "Element | ComponentClass<Pick<DetailsBodyProps<TData>, \"flat\" | \"data\" | \"fields\" | \"labelAlign\" | \"alternateRowColor\">, any> | FunctionComponent<Pick<DetailsBodyProps<TData>, \"flat\" | ... 3 more ... | \"alternateRowColor\">> | undefined"
              }
            },
            "labelAlign": {
              "defaultValue": null,
              "description": "Label alignment apply to all Cell",
              "name": "labelAlign",
              "required": false,
              "type": {
                "name": "\"left\" | \"right\" | undefined"
              }
            },
            "alternateRowColor": {
              "defaultValue": null,
              "description": "High-light color or True to use the default color for the odd row. Set false to disable the highlight",
              "name": "alternateRowColor",
              "required": false,
              "type": {
                "name": "string | boolean | CSSProperties | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/DetailsView/SingleDetailsView.tsx",
      "value": [
        {
          "description": "",
          "displayName": "DetailsForm",
          "methods": [],
          "props": {
            "header": {
              "defaultValue": null,
              "description": "",
              "name": "header",
              "required": false,
              "type": {
                "name": "string | DetailsHeaderProps | undefined"
              }
            },
            "footer": {
              "defaultValue": null,
              "description": "",
              "name": "footer",
              "required": false,
              "type": {
                "name": "DetailsFooterProps | undefined"
              }
            },
            "data": {
              "defaultValue": null,
              "description": "",
              "name": "data",
              "required": true,
              "type": {
                "name": "TData"
              }
            },
            "fields": {
              "defaultValue": null,
              "description": "",
              "name": "fields",
              "required": true,
              "type": {
                "name": "FieldOption<TData>[]"
              }
            },
            "flat": {
              "defaultValue": null,
              "description": "Flat theme without Card border and shadow",
              "name": "flat",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "labelAlign": {
              "defaultValue": null,
              "description": "Label alignment apply to all Cell",
              "name": "labelAlign",
              "required": false,
              "type": {
                "name": "\"left\" | \"right\" | undefined"
              }
            },
            "alternateRowColor": {
              "defaultValue": null,
              "description": "High-light color or True to use the default color for the odd row. Set false to disable the highlight",
              "name": "alternateRowColor",
              "required": false,
              "type": {
                "name": "string | boolean | CSSProperties | undefined"
              }
            },
            "As": {
              "defaultValue": null,
              "description": "",
              "name": "As",
              "required": false,
              "type": {
                "name": "Element | ComponentClass<Pick<DetailsBodyProps<TData>, \"flat\" | \"data\" | \"fields\" | \"labelAlign\" | \"alternateRowColor\">, any> | FunctionComponent<Pick<DetailsBodyProps<TData>, \"flat\" | ... 3 more ... | \"alternateRowColor\">> | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/EditForm/EditFormBody.tsx",
      "value": [
        {
          "description": "",
          "displayName": "EditFormBody",
          "methods": [],
          "props": {
            "data": {
              "defaultValue": null,
              "description": "",
              "name": "data",
              "required": true,
              "type": {
                "name": "TData"
              }
            },
            "fields": {
              "defaultValue": null,
              "description": "",
              "name": "fields",
              "required": true,
              "type": {
                "name": "FieldOption<TData>[]"
              }
            },
            "flat": {
              "defaultValue": null,
              "description": "Flat theme without Card border and shadow",
              "name": "flat",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "labelAlign": {
              "defaultValue": null,
              "description": "Label alignment apply to all Cell",
              "name": "labelAlign",
              "required": false,
              "type": {
                "name": "\"left\" | \"right\" | undefined"
              }
            },
            "alternateRowColor": {
              "defaultValue": null,
              "description": "High-light color or True to use the default color for the odd row. Set false to disable the highlight",
              "name": "alternateRowColor",
              "required": false,
              "type": {
                "name": "string | boolean | CSSProperties | undefined"
              }
            },
            "As": {
              "defaultValue": null,
              "description": "",
              "name": "As",
              "required": false,
              "type": {
                "name": "Element | ComponentClass<Pick<DetailsBodyProps<TData>, \"flat\" | \"data\" | \"fields\" | \"labelAlign\" | \"alternateRowColor\">, any> | FunctionComponent<Pick<DetailsBodyProps<TData>, \"flat\" | ... 3 more ... | \"alternateRowColor\">> | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/EditForm/SingleEditFrom.tsx",
      "value": [
        {
          "description": "",
          "displayName": "DetailsForm",
          "methods": [],
          "props": {
            "header": {
              "defaultValue": null,
              "description": "",
              "name": "header",
              "required": false,
              "type": {
                "name": "string | DetailsHeaderProps | undefined"
              }
            },
            "footer": {
              "defaultValue": null,
              "description": "",
              "name": "footer",
              "required": false,
              "type": {
                "name": "DetailsFooterProps | undefined"
              }
            },
            "data": {
              "defaultValue": null,
              "description": "",
              "name": "data",
              "required": true,
              "type": {
                "name": "TData"
              }
            },
            "fields": {
              "defaultValue": null,
              "description": "",
              "name": "fields",
              "required": true,
              "type": {
                "name": "FieldOption<TData>[]"
              }
            },
            "flat": {
              "defaultValue": null,
              "description": "Flat theme without Card border and shadow",
              "name": "flat",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "labelAlign": {
              "defaultValue": null,
              "description": "Label alignment apply to all Cell",
              "name": "labelAlign",
              "required": false,
              "type": {
                "name": "\"left\" | \"right\" | undefined"
              }
            },
            "alternateRowColor": {
              "defaultValue": null,
              "description": "High-light color or True to use the default color for the odd row. Set false to disable the highlight",
              "name": "alternateRowColor",
              "required": false,
              "type": {
                "name": "string | boolean | CSSProperties | undefined"
              }
            },
            "As": {
              "defaultValue": null,
              "description": "",
              "name": "As",
              "required": false,
              "type": {
                "name": "Element | ComponentClass<Pick<DetailsBodyProps<TData>, \"flat\" | \"data\" | \"fields\" | \"labelAlign\" | \"alternateRowColor\">, any> | FunctionComponent<Pick<DetailsBodyProps<TData>, \"flat\" | ... 3 more ... | \"alternateRowColor\">> | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Labels/LabelField.tsx",
      "value": [
        {
          "description": "",
          "displayName": "LabelField",
          "methods": [],
          "props": {
            "className": {
              "defaultValue": null,
              "description": "The addition css for LabelField component",
              "name": "className",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "icon": {
              "defaultValue": null,
              "description": "The Icon of Label",
              "name": "icon",
              "required": false,
              "type": {
                "name": "ReactNode"
              }
            },
            "variant": {
              "defaultValue": null,
              "description": "The display style of Label",
              "name": "variant",
              "required": false,
              "type": {
                "name": "\"caption\" | \"body\" | \"label\" | \"title\" | \"subtitle\" | \"chip\" | undefined"
              }
            },
            "bold": {
              "defaultValue": null,
              "description": "Make font-weight as Bold",
              "name": "bold",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "color": {
              "defaultValue": null,
              "description": "Custom color of LabelField it should be a hex color value ex: #e91e63",
              "name": "color",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "children": {
              "defaultValue": null,
              "description": "The child of Label normally it is a string",
              "name": "children",
              "required": true,
              "type": {
                "name": "ReactNode"
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/Labels/Title.tsx",
      "value": [
        {
          "description": "",
          "displayName": "Title",
          "methods": [],
          "props": {
            "className": {
              "defaultValue": null,
              "description": "",
              "name": "className",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "icon": {
              "defaultValue": null,
              "description": "",
              "name": "icon",
              "required": false,
              "type": {
                "name": "ReactNode"
              }
            },
            "caption": {
              "defaultValue": null,
              "description": "",
              "name": "caption",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "subtitle": {
              "defaultValue": null,
              "description": "",
              "name": "subtitle",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "text": {
              "defaultValue": null,
              "description": "",
              "name": "text",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "tooltip": {
              "defaultValue": null,
              "description": "",
              "name": "tooltip",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "color": {
              "defaultValue": null,
              "description": "",
              "name": "color",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/DetailsView/DetailsBody/DetailsField.tsx",
      "value": [
        {
          "description": "",
          "displayName": "DetailsField",
          "methods": [],
          "props": {
            "label": {
              "defaultValue": null,
              "description": "",
              "name": "label",
              "required": true,
              "type": {
                "name": "DisplayFieldProps"
              }
            },
            "As": {
              "defaultValue": null,
              "description": "",
              "name": "As",
              "required": false,
              "type": {
                "name": "Element | ComponentClass<Pick<DetailsFieldProps, \"label\" | \"labelAlign\" | \"gridSize\" | \"value\">, any> | FunctionComponent<Pick<DetailsFieldProps, \"label\" | \"labelAlign\" | \"gridSize\" | \"value\">> | undefined"
              }
            },
            "labelAlign": {
              "defaultValue": null,
              "description": "",
              "name": "labelAlign",
              "required": false,
              "type": {
                "name": "\"left\" | \"right\" | undefined"
              }
            },
            "value": {
              "defaultValue": null,
              "description": "",
              "name": "value",
              "required": true,
              "type": {
                "name": "DisplayFieldProps"
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/DetailsView/DetailsBody/GridBody.tsx",
      "value": [
        {
          "description": "",
          "displayName": "GridDetailsBody",
          "methods": [],
          "props": {
            "flat": {
              "defaultValue": null,
              "description": "Flat theme without Card border and shadow",
              "name": "flat",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "data": {
              "defaultValue": null,
              "description": "",
              "name": "data",
              "required": true,
              "type": {
                "name": "TData"
              }
            },
            "fields": {
              "defaultValue": null,
              "description": "",
              "name": "fields",
              "required": true,
              "type": {
                "name": "FieldOption<TData>[]"
              }
            },
            "labelAlign": {
              "defaultValue": null,
              "description": "Label alignment apply to all Cell",
              "name": "labelAlign",
              "required": false,
              "type": {
                "name": "\"left\" | \"right\" | undefined"
              }
            },
            "alternateRowColor": {
              "defaultValue": null,
              "description": "High-light color or True to use the default color for the odd row. Set false to disable the highlight",
              "name": "alternateRowColor",
              "required": false,
              "type": {
                "name": "string | boolean | CSSProperties | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/DetailsView/DetailsBody/TableBody.tsx",
      "value": [
        {
          "description": "",
          "displayName": "TableDetailsBody",
          "methods": [],
          "props": {
            "flat": {
              "defaultValue": null,
              "description": "Flat theme without Card border and shadow",
              "name": "flat",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "data": {
              "defaultValue": null,
              "description": "",
              "name": "data",
              "required": true,
              "type": {
                "name": "TData"
              }
            },
            "fields": {
              "defaultValue": null,
              "description": "",
              "name": "fields",
              "required": true,
              "type": {
                "name": "FieldOption<TData>[]"
              }
            },
            "labelAlign": {
              "defaultValue": null,
              "description": "Label alignment apply to all Cell",
              "name": "labelAlign",
              "required": false,
              "type": {
                "name": "\"left\" | \"right\" | undefined"
              }
            },
            "alternateRowColor": {
              "defaultValue": null,
              "description": "High-light color or True to use the default color for the odd row. Set false to disable the highlight",
              "name": "alternateRowColor",
              "required": false,
              "type": {
                "name": "string | boolean | CSSProperties | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/EditForm/EditField/DateTimeField.tsx",
      "value": [
        {
          "description": "Date, DateTime and Time picker. Default dateformat is  'DD/MM/YYYY'.\nRefer here for Date format convention: https://github.com/iamkun/dayjs/blob/dev/docs/en/API-reference.md#displaying\n@param param0 Date Value",
          "displayName": "DateTimeField",
          "methods": [],
          "props": {
            "variant": {
              "defaultValue": null,
              "description": "",
              "name": "variant",
              "required": false,
              "type": {
                "name": "\"filled\" | \"standard\" | \"outlined\" | undefined"
              }
            },
            "type": {
              "defaultValue": null,
              "description": "",
              "name": "type",
              "required": true,
              "type": {
                "name": "FieldType"
              }
            },
            "disabled": {
              "defaultValue": null,
              "description": "",
              "name": "disabled",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "form": {
              "defaultValue": null,
              "description": "",
              "name": "form",
              "required": true,
              "type": {
                "name": "FormikProps<any>"
              }
            },
            "label": {
              "defaultValue": null,
              "description": "",
              "name": "label",
              "required": false,
              "type": {
                "name": "ReactNode"
              }
            },
            "defaultValue": {
              "defaultValue": null,
              "description": "",
              "name": "defaultValue",
              "required": false,
              "type": {
                "name": "any"
              }
            },
            "placeholder": {
              "defaultValue": null,
              "description": "",
              "name": "placeholder",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "onChange": {
              "defaultValue": null,
              "description": "",
              "name": "onChange",
              "required": false,
              "type": {
                "name": "((event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => void) | undefined"
              }
            },
            "As": {
              "defaultValue": null,
              "description": "",
              "name": "As",
              "required": false,
              "type": {
                "name": "Element | ComponentClass<Pick<FieldProps<any>, \"form\" | \"field\">, any> | FunctionComponent<Pick<FieldProps<any>, \"form\" | \"field\">> | undefined"
              }
            },
            "labelAlign": {
              "defaultValue": null,
              "description": "only apply for labeled field",
              "name": "labelAlign",
              "required": false,
              "type": {
                "name": "\"left\" | \"right\" | undefined"
              }
            },
            "value": {
              "defaultValue": null,
              "description": "",
              "name": "value",
              "required": false,
              "type": {
                "name": "any"
              }
            },
            "autoFocus": {
              "defaultValue": null,
              "description": "",
              "name": "autoFocus",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "error": {
              "defaultValue": null,
              "description": "",
              "name": "error",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "fullWidth": {
              "defaultValue": null,
              "description": "",
              "name": "fullWidth",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "helperText": {
              "defaultValue": null,
              "description": "",
              "name": "helperText",
              "required": false,
              "type": {
                "name": "ReactNode"
              }
            },
            "inputRef": {
              "defaultValue": null,
              "description": "",
              "name": "inputRef",
              "required": false,
              "type": {
                "name": "((instance: any) => void) | RefObject<any> | null | undefined"
              }
            },
            "multiline": {
              "defaultValue": null,
              "description": "",
              "name": "multiline",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "name": {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "required": {
              "defaultValue": null,
              "description": "",
              "name": "required",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "rows": {
              "defaultValue": null,
              "description": "",
              "name": "rows",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            },
            "rowsMax": {
              "defaultValue": null,
              "description": "",
              "name": "rowsMax",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            },
            "dateFormat": {
              "defaultValue": null,
              "description": "Using for DateTime picker only",
              "name": "dateFormat",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "options": {
              "defaultValue": null,
              "description": "The options for select field",
              "name": "options",
              "required": false,
              "type": {
                "name": "SelectOption[] | undefined"
              }
            },
            "multiSelection": {
              "defaultValue": null,
              "description": "Apply multi Selection to Select Control",
              "name": "multiSelection",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "field": {
              "defaultValue": null,
              "description": "",
              "name": "field",
              "required": true,
              "type": {
                "name": "{ onChange: { (e: ChangeEvent<any>): void; <T = unknown>(field: T): T extends ChangeEvent<any> ? void : (e: unknown) => void; }; onBlur: { (e: FocusEvent<any>): void; <T = any>(fieldOrEvent: T): T extends string ? (e: any) => void : void; }; value: any; name: string; }"
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/EditForm/EditField/FieldWrapper.tsx",
      "value": [
        {
          "description": "",
          "displayName": "FieldWrapper",
          "methods": [],
          "props": {
            "autoFocus": {
              "defaultValue": null,
              "description": "",
              "name": "autoFocus",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "defaultValue": {
              "defaultValue": null,
              "description": "",
              "name": "defaultValue",
              "required": false,
              "type": {
                "name": "any"
              }
            },
            "disabled": {
              "defaultValue": null,
              "description": "",
              "name": "disabled",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "error": {
              "defaultValue": null,
              "description": "",
              "name": "error",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "fullWidth": {
              "defaultValue": null,
              "description": "",
              "name": "fullWidth",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "helperText": {
              "defaultValue": null,
              "description": "",
              "name": "helperText",
              "required": false,
              "type": {
                "name": "ReactNode"
              }
            },
            "inputRef": {
              "defaultValue": null,
              "description": "",
              "name": "inputRef",
              "required": false,
              "type": {
                "name": "((instance: any) => void) | RefObject<any> | null | undefined"
              }
            },
            "label": {
              "defaultValue": null,
              "description": "",
              "name": "label",
              "required": false,
              "type": {
                "name": "ReactNode"
              }
            },
            "multiline": {
              "defaultValue": null,
              "description": "",
              "name": "multiline",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "name": {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "onChange": {
              "defaultValue": null,
              "description": "",
              "name": "onChange",
              "required": false,
              "type": {
                "name": "((event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => void) | undefined"
              }
            },
            "placeholder": {
              "defaultValue": null,
              "description": "",
              "name": "placeholder",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "required": {
              "defaultValue": null,
              "description": "",
              "name": "required",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "rows": {
              "defaultValue": null,
              "description": "",
              "name": "rows",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            },
            "rowsMax": {
              "defaultValue": null,
              "description": "",
              "name": "rowsMax",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            },
            "value": {
              "defaultValue": null,
              "description": "",
              "name": "value",
              "required": false,
              "type": {
                "name": "any"
              }
            },
            "variant": {
              "defaultValue": null,
              "description": "",
              "name": "variant",
              "required": false,
              "type": {
                "name": "\"filled\" | \"standard\" | \"outlined\" | \"labeled\" | undefined"
              }
            },
            "type": {
              "defaultValue": null,
              "description": "Input Type if not provided the input type will be decided automatically based on value type",
              "name": "type",
              "required": false,
              "type": {
                "name": "\"number\" | \"color\" | \"checkbox\" | \"radio\" | \"text\" | \"select\" | \"time\" | \"image\" | \"date\" | \"url\" | \"password\" | \"file\" | \"email\" | \"datetime\" | \"week\" | undefined"
              }
            },
            "labelAlign": {
              "defaultValue": null,
              "description": "only apply for labeled field",
              "name": "labelAlign",
              "required": false,
              "type": {
                "name": "\"left\" | \"right\" | undefined"
              }
            },
            "dateFormat": {
              "defaultValue": null,
              "description": "Using for DateTime picker only",
              "name": "dateFormat",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "options": {
              "defaultValue": null,
              "description": "The options for select field",
              "name": "options",
              "required": false,
              "type": {
                "name": "SelectOption[] | undefined"
              }
            },
            "multiSelection": {
              "defaultValue": null,
              "description": "Apply multi Selection to Select Control",
              "name": "multiSelection",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "field": {
              "defaultValue": null,
              "description": "",
              "name": "field",
              "required": true,
              "type": {
                "name": "{ onChange: { (e: ChangeEvent<any>): void; <T = unknown>(field: T): T extends ChangeEvent<any> ? void : (e: unknown) => void; }; onBlur: { (e: FocusEvent<any>): void; <T = any>(fieldOrEvent: T): T extends string ? (e: any) => void : void; }; value: any; name: string; }"
              }
            },
            "form": {
              "defaultValue": null,
              "description": "",
              "name": "form",
              "required": true,
              "type": {
                "name": "FormikProps<any>"
              }
            },
            "As": {
              "defaultValue": null,
              "description": "",
              "name": "As",
              "required": false,
              "type": {
                "name": "Element | ComponentClass<Pick<FieldProps<any>, \"form\" | \"field\">, any> | FunctionComponent<Pick<FieldProps<any>, \"form\" | \"field\">> | undefined"
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/EditForm/EditField/TextField.tsx",
      "value": [
        {
          "description": "",
          "displayName": "CustomTextField",
          "methods": [],
          "props": {
            "variant": {
              "defaultValue": null,
              "description": "",
              "name": "variant",
              "required": false,
              "type": {
                "name": "\"filled\" | \"standard\" | \"outlined\" | undefined"
              }
            },
            "disabled": {
              "defaultValue": null,
              "description": "",
              "name": "disabled",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "form": {
              "defaultValue": null,
              "description": "",
              "name": "form",
              "required": true,
              "type": {
                "name": "FormikProps<any>"
              }
            },
            "label": {
              "defaultValue": null,
              "description": "",
              "name": "label",
              "required": false,
              "type": {
                "name": "ReactNode"
              }
            },
            "defaultValue": {
              "defaultValue": null,
              "description": "",
              "name": "defaultValue",
              "required": false,
              "type": {
                "name": "any"
              }
            },
            "placeholder": {
              "defaultValue": null,
              "description": "",
              "name": "placeholder",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "onChange": {
              "defaultValue": null,
              "description": "",
              "name": "onChange",
              "required": false,
              "type": {
                "name": "((event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => void) | undefined"
              }
            },
            "As": {
              "defaultValue": null,
              "description": "",
              "name": "As",
              "required": false,
              "type": {
                "name": "Element | ComponentClass<Pick<FieldProps<any>, \"form\" | \"field\">, any> | FunctionComponent<Pick<FieldProps<any>, \"form\" | \"field\">> | undefined"
              }
            },
            "labelAlign": {
              "defaultValue": null,
              "description": "only apply for labeled field",
              "name": "labelAlign",
              "required": false,
              "type": {
                "name": "\"left\" | \"right\" | undefined"
              }
            },
            "value": {
              "defaultValue": null,
              "description": "",
              "name": "value",
              "required": false,
              "type": {
                "name": "any"
              }
            },
            "autoFocus": {
              "defaultValue": null,
              "description": "",
              "name": "autoFocus",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "error": {
              "defaultValue": null,
              "description": "",
              "name": "error",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "fullWidth": {
              "defaultValue": null,
              "description": "",
              "name": "fullWidth",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "helperText": {
              "defaultValue": null,
              "description": "",
              "name": "helperText",
              "required": false,
              "type": {
                "name": "ReactNode"
              }
            },
            "inputRef": {
              "defaultValue": null,
              "description": "",
              "name": "inputRef",
              "required": false,
              "type": {
                "name": "((instance: any) => void) | RefObject<any> | null | undefined"
              }
            },
            "multiline": {
              "defaultValue": null,
              "description": "",
              "name": "multiline",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "name": {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "required": {
              "defaultValue": null,
              "description": "",
              "name": "required",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "rows": {
              "defaultValue": null,
              "description": "",
              "name": "rows",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            },
            "rowsMax": {
              "defaultValue": null,
              "description": "",
              "name": "rowsMax",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            },
            "type": {
              "defaultValue": null,
              "description": "Input Type if not provided the input type will be decided automatically based on value type",
              "name": "type",
              "required": false,
              "type": {
                "name": "\"number\" | \"color\" | \"checkbox\" | \"radio\" | \"text\" | \"select\" | \"time\" | \"image\" | \"date\" | \"url\" | \"password\" | \"file\" | \"email\" | \"datetime\" | \"week\" | undefined"
              }
            },
            "dateFormat": {
              "defaultValue": null,
              "description": "Using for DateTime picker only",
              "name": "dateFormat",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "options": {
              "defaultValue": null,
              "description": "The options for select field",
              "name": "options",
              "required": false,
              "type": {
                "name": "SelectOption[] | undefined"
              }
            },
            "multiSelection": {
              "defaultValue": null,
              "description": "Apply multi Selection to Select Control",
              "name": "multiSelection",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "field": {
              "defaultValue": null,
              "description": "",
              "name": "field",
              "required": true,
              "type": {
                "name": "{ onChange: { (e: ChangeEvent<any>): void; <T = unknown>(field: T): T extends ChangeEvent<any> ? void : (e: unknown) => void; }; onBlur: { (e: FocusEvent<any>): void; <T = any>(fieldOrEvent: T): T extends string ? (e: any) => void : void; }; value: any; name: string; }"
              }
            }
          }
        }
      ]
    },
    {
      "key": "src/components/EditForm/ErrorField/ErrorIconField.tsx",
      "value": []
    },
    {
      "key": "src/components/EditForm/ErrorField/ErrorLabelField.tsx",
      "value": []
    },
    {
      "key": "src/components/EditForm/ErrorField/ErrorMessageField.tsx",
      "value": []
    },
    {
      "key": "src/components/EditForm/EditField/SelectField/CustomComponents.tsx",
      "value": []
    },
    {
      "key": "src/components/EditForm/EditField/SelectField/MaterialSelectField.tsx",
      "value": [
        {
          "description": "",
          "displayName": "SelectField",
          "methods": [],
          "props": {
            "variant": {
              "defaultValue": null,
              "description": "",
              "name": "variant",
              "required": false,
              "type": {
                "name": "\"filled\" | \"standard\" | \"outlined\" | undefined"
              }
            },
            "disabled": {
              "defaultValue": null,
              "description": "",
              "name": "disabled",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "form": {
              "defaultValue": null,
              "description": "",
              "name": "form",
              "required": true,
              "type": {
                "name": "FormikProps<any>"
              }
            },
            "label": {
              "defaultValue": null,
              "description": "",
              "name": "label",
              "required": false,
              "type": {
                "name": "ReactNode"
              }
            },
            "defaultValue": {
              "defaultValue": null,
              "description": "",
              "name": "defaultValue",
              "required": false,
              "type": {
                "name": "any"
              }
            },
            "placeholder": {
              "defaultValue": null,
              "description": "",
              "name": "placeholder",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "onChange": {
              "defaultValue": null,
              "description": "",
              "name": "onChange",
              "required": false,
              "type": {
                "name": "((event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => void) | undefined"
              }
            },
            "As": {
              "defaultValue": null,
              "description": "",
              "name": "As",
              "required": false,
              "type": {
                "name": "Element | ComponentClass<Pick<FieldProps<any>, \"form\" | \"field\">, any> | FunctionComponent<Pick<FieldProps<any>, \"form\" | \"field\">> | undefined"
              }
            },
            "labelAlign": {
              "defaultValue": null,
              "description": "only apply for labeled field",
              "name": "labelAlign",
              "required": false,
              "type": {
                "name": "\"left\" | \"right\" | undefined"
              }
            },
            "value": {
              "defaultValue": null,
              "description": "",
              "name": "value",
              "required": false,
              "type": {
                "name": "any"
              }
            },
            "autoFocus": {
              "defaultValue": null,
              "description": "",
              "name": "autoFocus",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "error": {
              "defaultValue": null,
              "description": "",
              "name": "error",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "fullWidth": {
              "defaultValue": null,
              "description": "",
              "name": "fullWidth",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "helperText": {
              "defaultValue": null,
              "description": "",
              "name": "helperText",
              "required": false,
              "type": {
                "name": "ReactNode"
              }
            },
            "inputRef": {
              "defaultValue": null,
              "description": "",
              "name": "inputRef",
              "required": false,
              "type": {
                "name": "((instance: any) => void) | RefObject<any> | null | undefined"
              }
            },
            "multiline": {
              "defaultValue": null,
              "description": "",
              "name": "multiline",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "name": {
              "defaultValue": null,
              "description": "",
              "name": "name",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "required": {
              "defaultValue": null,
              "description": "",
              "name": "required",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "rows": {
              "defaultValue": null,
              "description": "",
              "name": "rows",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            },
            "rowsMax": {
              "defaultValue": null,
              "description": "",
              "name": "rowsMax",
              "required": false,
              "type": {
                "name": "string | number | undefined"
              }
            },
            "type": {
              "defaultValue": null,
              "description": "Input Type if not provided the input type will be decided automatically based on value type",
              "name": "type",
              "required": false,
              "type": {
                "name": "\"number\" | \"color\" | \"checkbox\" | \"radio\" | \"text\" | \"select\" | \"time\" | \"image\" | \"date\" | \"url\" | \"password\" | \"file\" | \"email\" | \"datetime\" | \"week\" | undefined"
              }
            },
            "dateFormat": {
              "defaultValue": null,
              "description": "Using for DateTime picker only",
              "name": "dateFormat",
              "required": false,
              "type": {
                "name": "string | undefined"
              }
            },
            "options": {
              "defaultValue": null,
              "description": "The options for select field",
              "name": "options",
              "required": false,
              "type": {
                "name": "SelectOption[] | undefined"
              }
            },
            "multiSelection": {
              "defaultValue": null,
              "description": "Apply multi Selection to Select Control",
              "name": "multiSelection",
              "required": false,
              "type": {
                "name": "boolean | undefined"
              }
            },
            "field": {
              "defaultValue": null,
              "description": "",
              "name": "field",
              "required": true,
              "type": {
                "name": "{ onChange: { (e: ChangeEvent<any>): void; <T = unknown>(field: T): T extends ChangeEvent<any> ? void : (e: unknown) => void; }; onBlur: { (e: FocusEvent<any>): void; <T = any>(fieldOrEvent: T): T extends string ? (e: any) => void : void; }; value: any; name: string; }"
              }
            }
          }
        }
      ]
    }
  ],
  "entries": [
    {
      "key": "src/index.mdx",
      "value": {
        "name": "Form Definition",
        "id": "6576455a124f9aaefd860597f03a8fe4",
        "filepath": "src/index.mdx",
        "link": "https://github.com/baoduy/mui-formik-generator/edit/master/src/index.mdx",
        "slug": "src-index",
        "route": "/src-index",
        "menu": "",
        "headings": [
          {
            "slug": "from-definition",
            "depth": 1,
            "value": "From Definition"
          },
          {
            "slug": "i-detials-form",
            "depth": 2,
            "value": "I. Detials Form"
          }
        ]
      }
    },
    {
      "key": "src/components/ErrorMessage.mdx",
      "value": {
        "name": "Error Message",
        "id": "e4512b742732cb7c1d327a2367cc562c",
        "filepath": "src/components/ErrorMessage.mdx",
        "link": "https://github.com/baoduy/mui-formik-generator/edit/master/src/components/ErrorMessage.mdx",
        "slug": "src-components-error-message",
        "route": "/src-components-error-message",
        "menu": "",
        "headings": [
          {
            "slug": "error-message-component",
            "depth": 1,
            "value": "Error Message Component"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/DetailsView/DetailsView.mdx",
      "value": {
        "name": "1. Details View",
        "id": "d82665307a018a2aa4f0bc07e630e7b5",
        "filepath": "src/components/DetailsView/DetailsView.mdx",
        "link": "https://github.com/baoduy/mui-formik-generator/edit/master/src/components/DetailsView/DetailsView.mdx",
        "slug": "src-components-details-view-details-view",
        "route": "/src-components-details-view-details-view",
        "menu": "",
        "headings": [
          {
            "slug": "details-view",
            "depth": 1,
            "value": "Details View"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          },
          {
            "slug": "usage",
            "depth": 2,
            "value": "Usage"
          },
          {
            "slug": "single-view",
            "depth": 3,
            "value": "Single View"
          },
          {
            "slug": "multi-section-view",
            "depth": 3,
            "value": "Multi Section View"
          }
        ]
      }
    },
    {
      "key": "src/components/DetailsView/SectionDetailsView.mdx",
      "value": {
        "name": "2. Section Details View",
        "id": "b54e0918ef0999536d304175768de9e4",
        "filepath": "src/components/DetailsView/SectionDetailsView.mdx",
        "link": "https://github.com/baoduy/mui-formik-generator/edit/master/src/components/DetailsView/SectionDetailsView.mdx",
        "slug": "src-components-details-view-section-details-view",
        "route": "/src-components-details-view-section-details-view",
        "menu": "",
        "headings": [
          {
            "slug": "section-details-view",
            "depth": 1,
            "value": "Section Details View"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          },
          {
            "slug": "usage",
            "depth": 2,
            "value": "Usage"
          },
          {
            "slug": "default-style",
            "depth": 3,
            "value": "Default Style"
          },
          {
            "slug": "table-style-with-single-section-per-row",
            "depth": 3,
            "value": "Table Style With Single Section Per Row"
          },
          {
            "slug": "flat-style",
            "depth": 3,
            "value": "Flat Style"
          }
        ]
      }
    },
    {
      "key": "src/components/DetailsView/SingleDetailsView.mdx",
      "value": {
        "name": "3. Single Details View",
        "id": "67ed92a57781d11d59a9fbc3bca8ac35",
        "filepath": "src/components/DetailsView/SingleDetailsView.mdx",
        "link": "https://github.com/baoduy/mui-formik-generator/edit/master/src/components/DetailsView/SingleDetailsView.mdx",
        "slug": "src-components-details-view-single-details-view",
        "route": "/src-components-details-view-single-details-view",
        "menu": "",
        "headings": [
          {
            "slug": "simple-details-view",
            "depth": 1,
            "value": "Simple Details View"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          },
          {
            "slug": "usage",
            "depth": 2,
            "value": "Usage"
          },
          {
            "slug": "default-style",
            "depth": 3,
            "value": "Default style"
          },
          {
            "slug": "table-style",
            "depth": 3,
            "value": "Table style"
          },
          {
            "slug": "flat-style",
            "depth": 3,
            "value": "Flat style"
          },
          {
            "slug": "alternate-row-default-style",
            "depth": 3,
            "value": "Alternate Row Default Style"
          },
          {
            "slug": "custom-alternate-row-style",
            "depth": 3,
            "value": "Custom Alternate Row Style"
          }
        ]
      }
    },
    {
      "key": "src/components/EditForm/EditView.mdx",
      "value": {
        "name": "Edit Form",
        "id": "a40558d1a415c07b9b2e19baf1e8ebd8",
        "filepath": "src/components/EditForm/EditView.mdx",
        "link": "https://github.com/baoduy/mui-formik-generator/edit/master/src/components/EditForm/EditView.mdx",
        "slug": "src-components-edit-form-edit-view",
        "route": "/src-components-edit-form-edit-view",
        "menu": "",
        "headings": [
          {
            "slug": "details-view",
            "depth": 1,
            "value": "Details View"
          },
          {
            "slug": "usage",
            "depth": 2,
            "value": "Usage"
          },
          {
            "slug": "default-style",
            "depth": 3,
            "value": "Default style"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/Labels/Label.mdx",
      "value": {
        "name": "Label Field",
        "id": "a1efc69c08b450fc20bab14328403ad9",
        "filepath": "src/components/Labels/Label.mdx",
        "link": "https://github.com/baoduy/mui-formik-generator/edit/master/src/components/Labels/Label.mdx",
        "slug": "src-components-labels-label",
        "route": "/src-components-labels-label",
        "menu": "",
        "headings": [
          {
            "slug": "label-field",
            "depth": 1,
            "value": "Label Field"
          },
          {
            "slug": "1-with-icon",
            "depth": 2,
            "value": "1. With Icon"
          },
          {
            "slug": "2-without-icon",
            "depth": 2,
            "value": "2. Without Icon"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/Labels/Title.mdx",
      "value": {
        "name": "Title Component",
        "id": "d1a04935cc53f054e03762af4a6ae5bd",
        "filepath": "src/components/Labels/Title.mdx",
        "link": "https://github.com/baoduy/mui-formik-generator/edit/master/src/components/Labels/Title.mdx",
        "slug": "src-components-labels-title",
        "route": "/src-components-labels-title",
        "menu": "",
        "headings": [
          {
            "slug": "title-component",
            "depth": 1,
            "value": "Title Component"
          },
          {
            "slug": "1-with-icon",
            "depth": 2,
            "value": "1. With Icon"
          },
          {
            "slug": "2-without-icon",
            "depth": 2,
            "value": "2. Without Icon"
          },
          {
            "slug": "3-custom-color",
            "depth": 2,
            "value": "3. Custom Color"
          },
          {
            "slug": "4-with-tooltip",
            "depth": 2,
            "value": "4. With Tooltip"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/EditForm/EditField/DateTimeField.mdx",
      "value": {
        "name": "Date Time Picker",
        "id": "f67335fa984295449fb1ceb94ccae26d",
        "filepath": "src/components/EditForm/EditField/DateTimeField.mdx",
        "link": "https://github.com/baoduy/mui-formik-generator/edit/master/src/components/EditForm/EditField/DateTimeField.mdx",
        "slug": "src-components-edit-form-edit-field-date-time-field",
        "route": "/src-components-edit-form-edit-field-date-time-field",
        "menu": "",
        "headings": [
          {
            "slug": "date-time-picker",
            "depth": 1,
            "value": "Date Time Picker"
          },
          {
            "slug": "standard-fields",
            "depth": 2,
            "value": "Standard Fields"
          },
          {
            "slug": "outline-fields",
            "depth": 2,
            "value": "Outline Fields"
          },
          {
            "slug": "filled-fields",
            "depth": 2,
            "value": "Filled Fields"
          },
          {
            "slug": "labeled-fields",
            "depth": 2,
            "value": "Labeled Fields"
          },
          {
            "slug": "props",
            "depth": 2,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/EditForm/EditField/SelectField.mdx",
      "value": {
        "name": "Select Field",
        "id": "0edcc33b7a0827c04f867eef243e9f44",
        "filepath": "src/components/EditForm/EditField/SelectField.mdx",
        "link": "https://github.com/baoduy/mui-formik-generator/edit/master/src/components/EditForm/EditField/SelectField.mdx",
        "slug": "src-components-edit-form-edit-field-select-field",
        "route": "/src-components-edit-form-edit-field-select-field",
        "menu": "",
        "headings": [
          {
            "slug": "select-field",
            "depth": 1,
            "value": "Select Field"
          },
          {
            "slug": "standard-fields",
            "depth": 2,
            "value": "Standard Fields"
          },
          {
            "slug": "outline-fields",
            "depth": 2,
            "value": "Outline Fields"
          },
          {
            "slug": "filled-fields",
            "depth": 2,
            "value": "Filled Fields"
          },
          {
            "slug": "labeled-fields",
            "depth": 2,
            "value": "Labeled Fields"
          },
          {
            "slug": "props",
            "depth": 1,
            "value": "Props"
          }
        ]
      }
    },
    {
      "key": "src/components/EditForm/EditField/TextField.mdx",
      "value": {
        "name": "Text Field",
        "id": "fb27dce2497c77b66f76a9d9f238ea8a",
        "filepath": "src/components/EditForm/EditField/TextField.mdx",
        "link": "https://github.com/baoduy/mui-formik-generator/edit/master/src/components/EditForm/EditField/TextField.mdx",
        "slug": "src-components-edit-form-edit-field-text-field",
        "route": "/src-components-edit-form-edit-field-text-field",
        "menu": "",
        "headings": [
          {
            "slug": "text-field",
            "depth": 1,
            "value": "Text Field"
          },
          {
            "slug": "standard-fields",
            "depth": 2,
            "value": "Standard Fields"
          },
          {
            "slug": "outline-fields",
            "depth": 2,
            "value": "Outline Fields"
          },
          {
            "slug": "filled-fields",
            "depth": 2,
            "value": "Filled Fields"
          },
          {
            "slug": "labeled-fields",
            "depth": 2,
            "value": "Labeled Fields"
          },
          {
            "slug": "props",
            "depth": 1,
            "value": "Props"
          }
        ]
      }
    }
  ]
}
